[{"D:\\GraphValidation\\graph-validation\\src\\index.js":"1","D:\\GraphValidation\\graph-validation\\src\\App.js":"2","D:\\GraphValidation\\graph-validation\\src\\reportWebVitals.js":"3","D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\index.js":"4","D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\Index.js":"5","D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\customFunctions\\Index.js":"6","D:\\GraphValidation\\graph-validation\\src\\data\\data.js":"7","D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\customFunctions\\GetDataFromHotel.js":"8","D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\customFunctions\\Credentials.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":171,"mtime":1608128316336,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":6872,"mtime":1608292938587,"results":"14","hashOfConfig":"11"},{"size":19844,"mtime":1611779369817,"results":"15","hashOfConfig":"11"},{"size":21843,"mtime":1611779333480,"results":"16","hashOfConfig":"11"},{"size":3210940,"mtime":1607958163890,"results":"17","hashOfConfig":"11"},{"size":489,"mtime":1608305169131,"results":"18","hashOfConfig":"11"},{"size":264,"mtime":1611779559095,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"16xb5ia",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\GraphValidation\\graph-validation\\src\\index.js",[],["40","41"],"D:\\GraphValidation\\graph-validation\\src\\App.js",[],"D:\\GraphValidation\\graph-validation\\src\\reportWebVitals.js",[],"D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\index.js",["42","43","44","45","46","47","48","49","50","51","52","53","54"],"D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\Index.js",["55","56","57","58","59","60"],"import React, { Fragment, useState } from \"react\";\r\n\r\nimport {\r\n  fetchGooglePlace,\r\n  fetchOpenPlaceDetail,\r\n  fetchYendaxPlaceDetail,\r\n  fetchHotelPlaceDetail,\r\n  fetchNameConfidence,\r\n  fetchPhoneConfidence,\r\n  fetchAddressConfidence,\r\n} from \"./customFunctions/Index\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport SearchImage from \"../../images/search.png\";\r\nimport AddImage from \"../../images/add.png\";\r\n\r\nconst Index = () => {\r\n  // array to store the detail part\r\n  const [data, setData] = useState([]);\r\n  const [counter, setCounter] = useState(1);\r\n  // array for dynamically add/remove and handling input fields\r\n  const [inputFields, setInputFields] = useState([\r\n    {\r\n      id: uuidv4(),\r\n      subject: \"\",\r\n      predicate: \"name\",\r\n      object: \"\",\r\n      disabled: true,\r\n    },\r\n  ]);\r\n  // hooks for manual confidence selection by user\r\n  const [googleWeight, setGoogleWeight] = useState(0.4);\r\n  const [openWeight, setOpenWeight] = useState(0.3);\r\n  const [yandexWeight, setYandexWeight] = useState(0.3);\r\n\r\n  const [state, setState] = React.useState({\r\n    googleWeight: 0.4,\r\n    openWeight: 0.3,\r\n    yandexWeight: 0.3,\r\n  });\r\n\r\n  // handle change input of manual assigning weights\r\n  const handleChange = (event) => {\r\n    const value = event.target.value;\r\n    setState({\r\n      ...state,\r\n      [event.target.name]: value,\r\n    });\r\n  };\r\n\r\n  // handle change input fields\r\n  const handleChangeInput = (id, event) => {\r\n    const newInputFields = inputFields.map((i) => {\r\n      if (id === i.id) {\r\n        i[event.target.name] = event.target.value;\r\n      }\r\n      return i;\r\n    });\r\n    setInputFields(newInputFields);\r\n  };\r\n  // add dynamically input fields\r\n  const handleAddFields = () => {\r\n    let name = inputFields[0].subject;\r\n    if (name !== \"\") {\r\n      let tempCounter = counter + 1;\r\n      setCounter(tempCounter);\r\n      if (counter <= 2) {\r\n        setInputFields([\r\n          ...inputFields,\r\n          {\r\n            id: uuidv4(),\r\n            subject: inputFields[0].subject,\r\n            predicate: \"phone\",\r\n            object: \"\",\r\n            disabled: false,\r\n          },\r\n        ]);\r\n      } else {\r\n        alert(\"Only three properties allowed!\");\r\n      }\r\n    } else {\r\n      alert(\"Please select subject first\");\r\n    }\r\n  };\r\n  // remove dynamically input fields\r\n  const handleRemoveFields = (id, subject) => {\r\n    if (inputFields.length > 1) {\r\n      const values = [...inputFields];\r\n      values.splice(\r\n        values.findIndex((value) => value.id === id),\r\n        1\r\n      );\r\n      setInputFields(values);\r\n      setCounter(1);\r\n      // call search button\r\n      if (data.length > 1) {\r\n        const values = [...data];\r\n        values.splice(\r\n          values.findIndex((value) => value.id === id),\r\n          1\r\n        );\r\n        setData(values);\r\n      }\r\n    }\r\n  };\r\n  // search\r\n  const handleButtonClick = async (place, event) => {\r\n    event.preventDefault();\r\n    var tempPlaceData = [];\r\n\r\n    // get the value of current subject/place name\r\n    const subject = inputFields[0].subject;\r\n    if (subject === \"\" || subject === undefined) {\r\n      alert(\"Subject field is required.\");\r\n      return false;\r\n    }\r\n    // check total weights\r\n    let totalWeight =\r\n      Number(state.googleWeight) +\r\n      Number(state.openWeight) +\r\n      Number(state.yandexWeight);\r\n    totalWeight = Math.ceil(totalWeight);\r\n    if (totalWeight !== 1) {\r\n      alert(\"Sum of assigning weights should be 1!\");\r\n      return false;\r\n    }\r\n\r\n    // place name with confidence\r\n    if (place) {\r\n      // hotel\r\n      let hotelPlaceData = await fetchHotelPlaceDetail(place, inputFields);\r\n      tempPlaceData = [\r\n        ...tempPlaceData,\r\n        {\r\n          dataSource: \"Hotel\",\r\n          name: hotelPlaceData[0].name,\r\n          phone: hotelPlaceData[0].phone,\r\n          address: hotelPlaceData[0].address,\r\n        },\r\n      ];\r\n\r\n      // google\r\n      let googlePlaceData = await fetchGooglePlace(place, inputFields);\r\n      tempPlaceData = [\r\n        ...tempPlaceData,\r\n        {\r\n          dataSource: \"Google\",\r\n          name: googlePlaceData[0].name,\r\n          phone: googlePlaceData[0].phone,\r\n          address: googlePlaceData[0].address,\r\n        },\r\n      ];\r\n      // open\r\n      let openPlaceData = await fetchOpenPlaceDetail(place, inputFields);\r\n      tempPlaceData = [\r\n        ...tempPlaceData,\r\n        {\r\n          dataSource: \"Open\",\r\n          name: openPlaceData[0].name,\r\n          phone: openPlaceData[0].phone,\r\n          address: openPlaceData[0].address,\r\n        },\r\n      ];\r\n      // yendax\r\n      let yendaxPlaceData = await fetchYendaxPlaceDetail(place, inputFields);\r\n      tempPlaceData = [\r\n        ...tempPlaceData,\r\n        {\r\n          dataSource: \"Yendax\",\r\n          name: yendaxPlaceData[0].name,\r\n          phone: yendaxPlaceData[0].phone,\r\n          address: yendaxPlaceData[0].address,\r\n        },\r\n      ];\r\n      // get phone value\r\n      let phoneValue = \"\";\r\n      if (inputFields.length === 2 && inputFields[1].predicate === \"phone\") {\r\n        phoneValue = inputFields[1].object;\r\n      } else if (\r\n        inputFields.length === 3 &&\r\n        inputFields[1].predicate === \"phone\"\r\n      ) {\r\n        phoneValue = inputFields[1].object;\r\n      } else if (\r\n        inputFields.length === 3 &&\r\n        inputFields[2].predicate === \"phone\"\r\n      ) {\r\n        phoneValue = inputFields[2].object;\r\n      }\r\n      // get address value\r\n      let addressValue = \"\";\r\n      if (inputFields.length === 2 && inputFields[1].predicate === \"address\") {\r\n        addressValue = inputFields[1].object;\r\n      } else if (\r\n        inputFields.length === 3 &&\r\n        inputFields[1].predicate === \"address\"\r\n      ) {\r\n        addressValue = inputFields[1].object;\r\n      } else if (\r\n        inputFields.length === 3 &&\r\n        inputFields[2].predicate === \"address\"\r\n      ) {\r\n        addressValue = inputFields[2].object;\r\n      }\r\n\r\n      // compute confidence for name\r\n      let nameConfidence = 0.0;\r\n      let phoneConfidence = 0.0;\r\n      let addressConfidence = 0.0;\r\n      nameConfidence = await fetchNameConfidence(tempPlaceData, place, state);\r\n      phoneConfidence = await fetchPhoneConfidence(\r\n        tempPlaceData,\r\n        phoneValue,\r\n        state\r\n      );\r\n      addressConfidence = await fetchAddressConfidence(\r\n        tempPlaceData,\r\n        addressValue,\r\n        state\r\n      );\r\n      // ceil up the confidence\r\n      nameConfidence = Math.ceil(nameConfidence);\r\n      // phoneConfidence = Math.ceil(phoneConfidence);\r\n      // addressConfidence = Math.ceil(addressConfidence);\r\n\r\n      let tempData = [];\r\n      // place\r\n\r\n      if (inputFields.length === 2 && inputFields[1].predicate === \"phone\") {\r\n        tempData = [\r\n          ...tempData,\r\n          {\r\n            validationProperty: \"Name\",\r\n            nameHotel: tempPlaceData[0].name,\r\n            nameGoogle: tempPlaceData[1].name,\r\n            nameOpen: tempPlaceData[2].name,\r\n            nameYendax: tempPlaceData[3].name,\r\n            confidenceName: nameConfidence * 100,\r\n          },\r\n          {\r\n            validationProperty: \"Phone\",\r\n            phoneHotel: tempPlaceData[0].phone,\r\n            phoneGoogle: tempPlaceData[1].phone,\r\n            phoneOpen: tempPlaceData[2].phone,\r\n            phoneYendax: tempPlaceData[3].phone,\r\n            confidencePhone: phoneConfidence * 100,\r\n          },\r\n        ];\r\n      } else if (\r\n        inputFields.length === 2 &&\r\n        inputFields[1].predicate === \"address\"\r\n      ) {\r\n        tempData = [\r\n          ...tempData,\r\n          {\r\n            validationProperty: \"Name\",\r\n            nameHotel: tempPlaceData[0].name,\r\n            nameGoogle: tempPlaceData[1].name,\r\n            nameOpen: tempPlaceData[2].name,\r\n            nameYendax: tempPlaceData[3].name,\r\n            confidenceName: nameConfidence * 100,\r\n          },\r\n          {\r\n            validationProperty: \"Address\",\r\n            addressHotel: tempPlaceData[0].address,\r\n            addressGoogle: tempPlaceData[1].address,\r\n            addressOpen: tempPlaceData[2].address,\r\n            addressYendax: tempPlaceData[3].address,\r\n\r\n            confidenceAddress: addressConfidence * 100,\r\n          },\r\n        ];\r\n      } else if (\r\n        inputFields.length === 3 &&\r\n        inputFields[1].predicate === \"phone\"\r\n      ) {\r\n        tempData = [\r\n          ...tempData,\r\n          {\r\n            validationProperty: \"Name\",\r\n            nameHotel: tempPlaceData[0].name,\r\n            nameGoogle: tempPlaceData[1].name,\r\n            nameOpen: tempPlaceData[2].name,\r\n            nameYendax: tempPlaceData[3].name,\r\n            confidenceName: nameConfidence * 100,\r\n          },\r\n          {\r\n            validationProperty: \"Phone\",\r\n            phoneHotel: tempPlaceData[0].phone,\r\n            phoneGoogle: tempPlaceData[1].phone,\r\n            phoneOpen: tempPlaceData[2].phone,\r\n            phoneYendax: tempPlaceData[3].phone,\r\n            confidencePhone: phoneConfidence * 100,\r\n          },\r\n          {\r\n            validationProperty: \"Address\",\r\n            addressHotel: tempPlaceData[0].address,\r\n            addressGoogle: tempPlaceData[1].address,\r\n            addressOpen: tempPlaceData[2].address,\r\n            addressYendax: tempPlaceData[3].address,\r\n\r\n            confidenceAddress: addressConfidence * 100,\r\n          },\r\n        ];\r\n      } else if (\r\n        inputFields.length === 3 &&\r\n        inputFields[1].predicate === \"address\"\r\n      ) {\r\n        tempData = [\r\n          ...tempData,\r\n          {\r\n            validationProperty: \"Name\",\r\n            nameHotel: tempPlaceData[0].name,\r\n            nameGoogle: tempPlaceData[1].name,\r\n            nameOpen: tempPlaceData[2].name,\r\n            nameYendax: tempPlaceData[3].name,\r\n            confidenceName: nameConfidence * 100,\r\n          },\r\n          {\r\n            validationProperty: \"Address\",\r\n            addressHotel: tempPlaceData[0].address,\r\n            addressGoogle: tempPlaceData[1].address,\r\n            addressOpen: tempPlaceData[2].address,\r\n            addressYendax: tempPlaceData[3].address,\r\n\r\n            confidenceAddress: addressConfidence * 100,\r\n          },\r\n          {\r\n            validationProperty: \"Phone\",\r\n            phoneHotel: tempPlaceData[0].phone,\r\n            phoneGoogle: tempPlaceData[1].phone,\r\n            phoneOpen: tempPlaceData[2].phone,\r\n            phoneYendax: tempPlaceData[3].phone,\r\n            confidencePhone: phoneConfidence * 100,\r\n          },\r\n        ];\r\n      } else {\r\n        tempData = [\r\n          ...tempData,\r\n          {\r\n            validationProperty: \"Name\",\r\n            nameHotel: tempPlaceData[0].name,\r\n            nameGoogle: tempPlaceData[1].name,\r\n            nameOpen: tempPlaceData[2].name,\r\n            nameYendax: tempPlaceData[3].name,\r\n            confidenceName: nameConfidence * 100,\r\n          },\r\n        ];\r\n      }\r\n      setData(tempData);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <h2\r\n        style={{ textAlign: \"center\", marginTop: \"50px\", marginBottom: \"50px\" }}\r\n      >\r\n        Knowledge Graph Validator\r\n      </h2>\r\n      <div className=\"row\">\r\n        <div>\r\n          <button\r\n            className=\"btn btn-seconday\"\r\n            type=\"button\"\r\n            onClick={handleAddFields}\r\n          >\r\n            <p>\r\n              <img src={AddImage} width=\"40px\" height=\"40px\" alt=\"add more\" />\r\n              <br />\r\n              add more\r\n            </p>\r\n          </button>\r\n        </div>\r\n        <div>\r\n          {inputFields.map((inputField, index) => {\r\n            return (\r\n              <div className=\"row\" key={index}>\r\n                <div className=\"col-md-4\">\r\n                  {inputFields.length === 1 ? (\r\n                    <div className=\"form-group form-group-lg\">\r\n                      <input\r\n                        name=\"subject\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={inputField.subject}\r\n                        style={{ height: \"40px\" }}\r\n                        onChange={(event) =>\r\n                          handleChangeInput(inputField.id, event)\r\n                        }\r\n                      />\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"form-group form-group-lg\">\r\n                      <input\r\n                        name=\"subject\"\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        value={inputField.subject}\r\n                        style={{ height: \"40px\" }}\r\n                        onChange={(event) =>\r\n                          handleChangeInput(inputField.id, event)\r\n                        }\r\n                        disabled\r\n                      />\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"col-md-3\">\r\n                  <div className=\"form-group form-group-lg\">\r\n                    <select\r\n                      className=\"form-control\"\r\n                      name=\"predicate\"\r\n                      value={inputField.predicate}\r\n                      onChange={(event) =>\r\n                        handleChangeInput(inputField.id, event)\r\n                      }\r\n                      style={{ height: \"40px\" }}\r\n                      disabled={inputField.disabled}\r\n                    >\r\n                      <option defaultValue=\"name\">Name</option>\r\n                      <option value=\"phone\">Phone Number</option>\r\n                      <option value=\"address\">Address</option>\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                  <div className=\"form-group form-group-lg\">\r\n                    <input\r\n                      name=\"object\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      value={inputField.object}\r\n                      disabled={inputField.disabled}\r\n                      onChange={(event) =>\r\n                        handleChangeInput(inputField.id, event)\r\n                      }\r\n                      placeholder=\"Enter a object\"\r\n                      style={{ height: \"40px\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-outline-danger btn-sm\"\r\n                    style={{ verticalAlign: \"center\", height: \"40px\" }}\r\n                    onClick={() => handleRemoveFields(inputField.id)}\r\n                  >\r\n                    X\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n        <div className=\"col-md\">\r\n          <button\r\n            className=\"btn btn-seconday\"\r\n            type=\"submit\"\r\n            onClick={(event) =>\r\n              handleButtonClick(inputFields[0].subject, event)\r\n            }\r\n          >\r\n            <p>\r\n              <img src={SearchImage} width=\"50px\" height=\"40px\" alt=\"search\" />\r\n              <br />\r\n              search\r\n            </p>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"col-md\">\r\n          <span>\r\n            <b>Manual Weights</b>\r\n          </span>\r\n          <div\r\n            className=\"row\"\r\n            style={{ width: \"150px\", border: \"solid 1px\", color: \"green\" }}\r\n          >\r\n            <div className=\"col-md-5\">\r\n              <label>\r\n                <b>Google</b>\r\n              </label>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"googleWeight\"\r\n                value={state.googleWeight}\r\n                onChange={handleChange}\r\n                style={{\r\n                  width: \"50px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <label>\r\n                <b>Open</b>\r\n              </label>\r\n            </div>\r\n\r\n            <div className=\"col-md-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"openWeight\"\r\n                value={state.openWeight}\r\n                onChange={handleChange}\r\n                style={{\r\n                  width: \"50px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <label>\r\n                <b>Yandex</b>\r\n              </label>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"yandexWeight\"\r\n                value={state.yandexWeight}\r\n                onChange={handleChange}\r\n                style={{\r\n                  width: \"50px\",\r\n                  textAlign: \"center\",\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className=\"row\"\r\n        style={{\r\n          backgroundColor: \"#ff8000\",\r\n          color: \"white\",\r\n          height: \"50px\",\r\n          textAlign: \"center\",\r\n          alignContent: \"center\",\r\n          fontSize: \"18px\",\r\n        }}\r\n      >\r\n        <div className=\"col-md-2\">Property Name</div>\r\n        <div className=\"col-md-2\">Hotel</div>\r\n        <div className=\"col-md-2\">Google</div>\r\n        <div className=\"col-md-2\">Open Street Map</div>\r\n        <div className=\"col-md-2\">Yendax</div>\r\n        <div className=\"col-md-2\">Confidence</div>\r\n      </div>\r\n      {data.map((a, index) => {\r\n        return (\r\n          <Fragment>\r\n            <div className=\"row\" key={index} style={{ border: \"solid 1px\" }}>\r\n              <div className=\"col-md-2\">\r\n                <b>{a.validationProperty}</b>\r\n              </div>\r\n              <div className=\"col-md-2\">\r\n                {a.nameHotel\r\n                  ? a.nameHotel\r\n                  : a.phoneHotel\r\n                  ? a.phoneHotel\r\n                  : a.addressHotel\r\n                  ? a.addressHotel\r\n                  : \"\"}\r\n              </div>\r\n              <div className=\"col-md-2\">\r\n                {a.nameGoogle\r\n                  ? a.nameGoogle\r\n                  : a.phoneGoogle\r\n                  ? a.phoneGoogle\r\n                  : a.addressGoogle\r\n                  ? a.addressGoogle\r\n                  : \"\"}\r\n              </div>\r\n              <div className=\"col-md-2\">\r\n                {a.nameOpen\r\n                  ? a.nameOpen\r\n                  : a.phoneOpen\r\n                  ? a.phoneOpen\r\n                  : a.addressOpen\r\n                  ? a.addressOpen\r\n                  : \"\"}\r\n              </div>\r\n              <div className=\"col-md-2\">\r\n                {a.nameYendax\r\n                  ? a.nameYendax\r\n                  : a.phoneYendax\r\n                  ? a.phoneYendax\r\n                  : a.addressYendax\r\n                  ? a.addressYendax\r\n                  : \"\"}\r\n              </div>\r\n              <div\r\n                className=\"col-md-2\"\r\n                style={{\r\n                  textAlign: \"center\",\r\n                  fontWeight: \"bold\",\r\n                  color: \"green\",\r\n                }}\r\n              >\r\n                <p>\r\n                  {a.confidenceName\r\n                    ? a.confidenceName\r\n                    : a.confidencePhone\r\n                    ? a.confidencePhone\r\n                    : a.confidenceAddress\r\n                    ? a.confidenceAddress\r\n                    : 0}{\" \"}\r\n                  %\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default Index;\r\n","D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\customFunctions\\Index.js",["61","62","63","64","65"],"D:\\GraphValidation\\graph-validation\\src\\data\\data.js",[],"D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\customFunctions\\GetDataFromHotel.js",[],"D:\\GraphValidation\\graph-validation\\src\\components\\places-hotels\\customFunctions\\Credentials.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":2,"column":8,"nodeType":"72","messageId":"73","endLine":2,"endColumn":13},{"ruleId":"70","severity":1,"message":"74","line":4,"column":8,"nodeType":"72","messageId":"73","endLine":4,"endColumn":19},{"ruleId":"70","severity":1,"message":"75","line":5,"column":8,"nodeType":"72","messageId":"73","endLine":5,"endColumn":16},{"ruleId":"70","severity":1,"message":"76","line":9,"column":10,"nodeType":"72","messageId":"73","endLine":9,"endColumn":17},{"ruleId":"70","severity":1,"message":"77","line":9,"column":19,"nodeType":"72","messageId":"73","endLine":9,"endColumn":29},{"ruleId":"70","severity":1,"message":"78","line":10,"column":10,"nodeType":"72","messageId":"73","endLine":10,"endColumn":19},{"ruleId":"70","severity":1,"message":"79","line":10,"column":21,"nodeType":"72","messageId":"73","endLine":10,"endColumn":33},{"ruleId":"70","severity":1,"message":"80","line":12,"column":10,"nodeType":"72","messageId":"73","endLine":12,"endColumn":14},{"ruleId":"70","severity":1,"message":"81","line":12,"column":16,"nodeType":"72","messageId":"73","endLine":12,"endColumn":23},{"ruleId":"70","severity":1,"message":"82","line":13,"column":10,"nodeType":"72","messageId":"73","endLine":13,"endColumn":17},{"ruleId":"70","severity":1,"message":"83","line":13,"column":19,"nodeType":"72","messageId":"73","endLine":13,"endColumn":29},{"ruleId":"70","severity":1,"message":"84","line":16,"column":10,"nodeType":"72","messageId":"73","endLine":16,"endColumn":21},{"ruleId":"70","severity":1,"message":"85","line":16,"column":23,"nodeType":"72","messageId":"73","endLine":16,"endColumn":37},{"ruleId":"70","severity":1,"message":"86","line":31,"column":10,"nodeType":"72","messageId":"73","endLine":31,"endColumn":22},{"ruleId":"70","severity":1,"message":"87","line":31,"column":24,"nodeType":"72","messageId":"73","endLine":31,"endColumn":39},{"ruleId":"70","severity":1,"message":"88","line":32,"column":10,"nodeType":"72","messageId":"73","endLine":32,"endColumn":20},{"ruleId":"70","severity":1,"message":"89","line":32,"column":22,"nodeType":"72","messageId":"73","endLine":32,"endColumn":35},{"ruleId":"70","severity":1,"message":"90","line":33,"column":10,"nodeType":"72","messageId":"73","endLine":33,"endColumn":22},{"ruleId":"70","severity":1,"message":"91","line":33,"column":24,"nodeType":"72","messageId":"73","endLine":33,"endColumn":39},{"ruleId":"70","severity":1,"message":"92","line":3,"column":32,"nodeType":"72","messageId":"73","endLine":3,"endColumn":39},{"ruleId":"70","severity":1,"message":"93","line":542,"column":7,"nodeType":"72","messageId":"73","endLine":542,"endColumn":10},{"ruleId":"94","severity":1,"message":"95","line":634,"column":3,"nodeType":"96","messageId":"97","endLine":673,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":680,"column":3,"nodeType":"96","messageId":"97","endLine":720,"endColumn":4},{"ruleId":"94","severity":1,"message":"95","line":727,"column":3,"nodeType":"96","messageId":"97","endLine":768,"endColumn":4},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'SearchImage' is defined but never used.","'AddImage' is defined but never used.","'placeId' is assigned a value but never used.","'setPlaceId' is assigned a value but never used.","'placeName' is assigned a value but never used.","'setPlaceName' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'counter' is assigned a value but never used.","'setCounter' is assigned a value but never used.","'inputFields' is assigned a value but never used.","'setInputFields' is assigned a value but never used.","'googleWeight' is assigned a value but never used.","'setGoogleWeight' is assigned a value but never used.","'openWeight' is assigned a value but never used.","'setOpenWeight' is assigned a value but never used.","'yandexWeight' is assigned a value but never used.","'setYandexWeight' is assigned a value but never used.","'openKey' is defined but never used.","'url' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]